
Message Queue based on ZooKeeper
================================

WARNING: This is work in progress and it's not production ready.

Objectives
----------

Build a highly available & reliable message queue. The main focus is not on perfomance! 

This queue should be able to survive hardware and software upgrades and failures 
with no downtime for years :) 

The queue should be accesible using both the default zookeeper binary protocol
and the zookeeper rest interface. 

ZooKeeper Data Tree Structure
-----------------------------

<chroot-prefix OR />/
  /queue
    /messages/
      /message-1
      /message-2
      ...
    /partial        - total consumer failure
      /message-1
      /message-2
      ...
    /consumers
      /consumer-1
        /status     - ephemeral znode
        /message
      /consumer-2
        /status     - ephemeral
        /message

Requirements
------------

Tested with Python 2.6
and zkpython 3.4.0--1, built on 02/19/2011 14:52 GMT

You also need simplejson for the rest interface

How to install zkpython?
------------------------

Fetch the latest sources from the trunk and run:

$ apt-get install sun-java6-jdk libtool libcppunit-dev automake build-essential ant

$ cd zookeeper
$ ant compile compile_jute
$ cd src/c/
$ autoreconf -if
$ ./configure
$ make && sudo make install
$ cd ../contrib/zkpython
$ ant compile
$ sudo ant install

After all this you should be able to do:

$ python -c "import zookeeper;print zookeeper.__version__"
3.4.0

How to test?
------------

You need to start a Zookeeper cluster and (optionaly) a rest interface. The repo
contains everything needed for starting a ZooKeeper cluster with 5 nodes and
a rest interface by running the following commands:

$ cd test_5_trunk
$ ./start.sh       - will start zookeeper and the rest interface

Stop it by running:
$ ./stop.sh

You can simulate failures on the cluster nodes by running:
$ python fail.py 

Clean data by running:
$ ./clean.sh

License
-------

Apache License Version 2.0

Resources
---------

Inspired by this article wrote by Henry Robinson on the Cloudera blog:

http://www.cloudera.com/blog/2009/05/building-a-distributed-concurrent-queue-with-apache-zookeeper/

